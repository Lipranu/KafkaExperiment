version: '3.4'

services:
  monitor:
    image: ${DOCKER_REGISTRY-}monitor
    hostname: monitor
    build:
      context: .
      dockerfile: Monitor/Dockerfile
    privileged: true
    depends_on:
      - schema-registry
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:44392;http://+:80
      - ASPNETCORE_HTTPS_PORT=44392
    ports:
      - "59404:80"
      - "44392:44392"

  factory:
    image: ${DOCKER_REGISTRY-}factory
    hostname: factory
    container_name: factory0
    build:
      context: .
      dockerfile: Factory/Dockerfile
    depends_on:
      - schema-registry
    environment:
      FACTORY_ID: 'dd789adc-d242-44e6-a36b-b93f1e3a7908'

  factory2:
    image: ${DOCKER_REGISTRY-}factory
    hostname: factory2
    container_name: factory2
    build:
      context: .
      dockerfile: Factory/Dockerfile
    depends_on:
      - schema-registry
    environment:
      FACTORY_ID: '85a7f627-e120-4289-b7eb-8f981e16cdf8'

  factory3:
    image: ${DOCKER_REGISTRY-}factory
    hostname: factory3
    container_name: factory3
    build:
      context: .
      dockerfile: Factory/Dockerfile
    depends_on:
      - schema-registry
    environment:
      FACTORY_ID: 'ad1c3084-2523-442c-ac9f-b7376cd16d42'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    volumes:
      - "./kafka/server.properties:/etc/kafka/server.properties"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker1

  broker2:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker2
    container_name: broker2
    depends_on:
      - zookeeper
    ports:
      - "29093:29093"
      - "9093:9093"
      - "9201:9201"
    volumes:
      - "./kafka/server.properties:/etc/config/server.properties"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker2

  broker3:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker3
    container_name: broker3
    depends_on:
      - zookeeper
    ports:
      - "29094:29094"
      - "9094:9094"
      - "9301:9301"
    volumes:
      - "./kafka/server.properties:/etc/kafka/server.properties"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker3

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      SPRING_CONFIG_ADDITIONAL-LOCATION: /config.yml
    volumes:
      - ./kui/config.yml:/config.yml

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - broker1
      - schema-registry
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b broker1:29092 1 30 && \
      kafka-topics --create --topic factory.info --partitions 7 --replication-factor 3 --if-not-exists --bootstrap-server broker1:29092 --config cleanup.policy=compact && \
      kafka-topics --create --topic factory.switch --partitions 6 --replication-factor 3 --if-not-exists --bootstrap-server broker1:29092 --config cleanup.policy=compact && \
      kafka-topics --create --topic factory.repair --partitions 9 --replication-factor 3 --if-not-exists --bootstrap-server broker1:29092 --config cleanup.policy=compact && \
      kafka-topics --create --topic factory.data --partitions 3 --replication-factor 3 --if-not-exists --bootstrap-server broker1:29092'"

